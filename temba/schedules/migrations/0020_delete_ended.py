# Generated by Django 4.2.3 on 2023-11-06 20:17

from django.db import migrations


def delete_ended_or_orpaned(apps, schema_editor):  # pragma: no cover
    Schedule = apps.get_model("schedules", "Schedule")

    num_broadcasts, num_triggers, num_orphans = 0, 0, 0

    for sched in Schedule.objects.filter(next_fire=None).exclude(broadcast=None).select_related("broadcast"):
        sched.is_active = False
        sched.save(update_fields=("is_active",))

        sched.broadcast.is_active = False
        sched.broadcast.save(update_fields=("is_active",))

        num_broadcasts += 1

    for sched in Schedule.objects.filter(next_fire=None).exclude(trigger=None).select_related("trigger"):
        sched.is_active = False
        sched.save(update_fields=("is_active",))

        sched.trigger.is_active = False
        sched.trigger.save(update_fields=("is_active",))

        num_triggers += 1

    for sched in Schedule.objects.filter(broadcast=None, trigger=None):
        sched.is_active = False
        sched.save(update_fields=("is_active",))

        num_orphans += 1

    if num_broadcasts or num_triggers or num_orphans:
        print(
            f"Deleted {num_broadcasts} ended scheduled broadcasts, {num_triggers} ended scheduled triggers, "
            f"and {num_orphans} orphaned schedules"
        )


def reverse(apps, schema_editor):  # pragma: no cover
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("schedules", "0019_fix_deleted_schedules"),
        ("triggers", "0038_trigger_triggers_scheduled_trigger_has_schedule"),
    ]

    operations = [migrations.RunPython(delete_ended_or_orpaned, reverse)]

# Generated by Django 4.2.3 on 2023-11-27 19:55

from django.db import migrations

LANGUAGE_MAPPING = dict(
    af=("afr", None),  # Afrikaans
    sq=("sqi", None),  # Albanian
    ar=("ara", None),  # Arabic
    az=("aze", None),  # Azerbaijani
    bn=("ben", None),  # Bengali
    bg=("bul", None),  # Bulgarian
    ca=("cat", None),  # Catalan
    zh_CN=("zho", "CN"),  # Chinese (CHN)
    zh_HK=("zho", "HK"),  # Chinese (HKG)
    zh_TW=("zho", "TW"),  # Chinese (TAI)
    hr=("hrv", None),  # Croatian
    cs=("ces", None),  # Czech
    da=("dah", None),  # Danish
    nl=("nld", None),  # Dutch
    en=("eng", None),  # English
    en_GB=("eng", "GB"),  # English (UK)
    en_US=("eng", "US"),  # English (US)
    et=("est", None),  # Estonian
    fil=("fil", None),  # Filipino
    fi=("fin", None),  # Finnish
    fr=("fra", None),  # French (FR)
    fr_FR=("fra", "FR"),  # French
    ka=("kat", None),  # Georgian
    de=("deu", None),  # German
    el=("ell", None),  # Greek
    gu=("guj", None),  # Gujarati
    ha=("hau", None),  # Hausa
    he=("enb", None),  # Hebrew
    hi=("hin", None),  # Hindi
    hu=("hun", None),  # Hungarian
    id=("ind", None),  # Indonesian
    ga=("gle", None),  # Irish
    it=("ita", None),  # Italian
    ja=("jpn", None),  # Japanese
    kn=("kan", None),  # Kannada
    kk=("kaz", None),  # Kazakh
    rw_RW=("kin", None),  # Kinyarwanda
    ko=("kor", None),  # Korean
    ky_KG=("kir", None),  # Kyrgyzstan
    lo=("lao", None),  # Lao
    lv=("lav", None),  # Latvian
    lt=("lit", None),  # Lithuanian
    ml=("mal", None),  # Malayalam
    mk=("mkd", None),  # Macedonian
    ms=("msa", None),  # Malay
    mr=("mar", None),  # Marathi
    nb=("nob", None),  # Norwegian
    fa=("fas", None),  # Persian
    pl=("pol", None),  # Polish
    pt_BR=("por", "BR"),  # Portuguese (BR)
    pt_PT=("por", "PT"),  # Portuguese (POR)
    pa=("pan", None),  # Punjabi
    ro=("ron", None),  # Romanian
    ru=("rus", None),  # Russian
    sr=("srp", None),  # Serbian
    sk=("slk", None),  # Slovak
    sl=("slv", None),  # Slovenian
    es=("spa", None),  # Spanish
    es_AR=("spa", "AR"),  # Spanish (ARG)
    es_ES=("spa", "ES"),  # Spanish (SPA)
    es_MX=("spa", "MX"),  # Spanish (MEX)
    sw=("swa", None),  # Swahili
    sv=("swe", None),  # Swedish
    ta=("tam", None),  # Tamil
    te=("tel", None),  # Telugu
    th=("tha", None),  # Thai
    tr=("tur", None),  # Turkish
    uk=("ukr", None),  # Ukrainian
    ur=("urd", None),  # Urdu
    uz=("uzb", None),  # Uzbek
    vi=("vie", None),  # Vietnamese
    zu=("zul", None),  # Zulu
)


def backfill_template_locale(apps, schema_editor):  # pragma: no cover
    TemplateTranslation = apps.get_model("templates", "TemplateTranslation")

    locale_mapping = {v: k for k, v in LANGUAGE_MAPPING.items()}
    num_updated = 0

    for tt in TemplateTranslation.objects.filter(locale=None):
        country_code = tt.country.code if tt.country else None
        tt.locale = f"{tt.language}-{country_code}" if country_code else tt.language
        tt.external_locale = locale_mapping[(tt.language, country_code)]
        tt.save(update_fields=("locale", "external_locale"))
        num_updated += 1

    if num_updated:
        print(f"Updated locale on {num_updated} template translations")


def reverse(apps, schema_editor):  # pragma: no cover
    pass


class Migration(migrations.Migration):
    dependencies = [("templates", "0015_templatetranslation_external_locale_and_more")]

    operations = [migrations.RunPython(backfill_template_locale, reverse)]

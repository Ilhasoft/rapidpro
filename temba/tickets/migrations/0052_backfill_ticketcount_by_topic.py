# Generated by Django 4.1.7 on 2023-04-25 16:28

from django.db import migrations, transaction

STATUS_OPEN = "O"
STATUS_CLOSED = "C"


def backfill_ticket_counts_by_topic(apps, schema_editor):  # pragma: no cover
    TicketCount = apps.get_model("tickets", "TicketCount")
    Topic = apps.get_model("tickets", "Topic")

    for topic in Topic.objects.all().select_related("org"):
        with transaction.atomic():
            open_count = topic.tickets.filter(status=STATUS_OPEN).count()
            closed_count = topic.tickets.filter(status=STATUS_CLOSED).count()

            TicketCount.objects.filter(org=topic.org, scope=f"topic:{topic.id}").delete()

            if open_count:
                TicketCount.objects.create(
                    org=topic.org,
                    scope=f"topic:{topic.id}",
                    status=STATUS_OPEN,
                    count=open_count,
                    is_squashed=True,
                )

            if closed_count:
                TicketCount.objects.create(
                    org=topic.org,
                    scope=f"topic:{topic.id}",
                    status=STATUS_CLOSED,
                    count=closed_count,
                    is_squashed=True,
                )


def reverse(apps, schema_editor):  # pragma: no cover
    pass


class Migration(migrations.Migration):
    dependencies = [("tickets", "0051_remove_ticketcount_assignee")]

    operations = [migrations.RunPython(backfill_ticket_counts_by_topic, reverse)]
